.search-form {
  width: 100%;

  .input-bar {
    $br: 24px;

    background-color: color(white);
    border: 1px solid color(borderGrey);
    border-radius: $br;

    display: flex;
    flex-wrap: nowrap;

    input::placeholder {
      color: color(fontFade);
    }

    #submit {
      display: none;
    }

    #searchbar, .search-btn {
      padding: 0.45rem 1rem 0.35rem;
    }

    #searchbar {
      font-size: size(body);
      width: 100%;
      border: none;
      background-color: transparent;

      &:-webkit-autofill {
        border-radius: $br 0 0 $br;
      }

      &:focus {
        outline: none 0;
      }
    }

    .search-btn {
      cursor: pointer;
      flex: 0 0 auto;

      img {
        transform: translateY(1px);
        width: 18px;
        height: 18px;
      }
    }
  }

  .filter-item {
    display: flex;
    align-items: center;

    input {
      margin-right: 0.5em;
    }
  }

  .dates, .misc {
    margin-bottom: 1em;
  }

  .dates, .misc, .services {
    > div {
      margin-bottom: 0.2em;

      label {
        margin-right: 1em;
      }
    }
  }

  .dates {
    > div {
      max-width: 20em;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
  }

  .misc {
    label {
      display: inline-flex;
      justify-content: center;

      &::before {
        content: "";
        display: inline-block;
        border-right: 0.35em solid;
        margin-right: 0.35em;
      }
    }

    &-forks {
      label::before {
        border-color: color(tagFork);
      }
    }
    &-archived {
      label::before  {
        border-color: color(tagArchived);
      }
    }
    &-empty {
      label::before {
        border-color: color(tagEmpty);
      }
    }
    &-mirror {
      label::before {
        border-color: color(tagMirror);
      }
    }
  }

  .services {
    &-label {
      margin: 0 0 0.25em 0;
    }

    &-sources {
      display: flex;
      flex-wrap: wrap;

      .hosting-service {
        flex: 0 0 50%;
      }
    }
  }

  .search-hints {
    .cheat-sheet {
      margin: 0;
    }

    .docs-link {
      margin-top: 2em;
    }

    .hint {
      font-size: size(detail);
      margin-bottom: 1em;

      &-prefix, &-suffix {
        display: block;
      }

      &-prefix {
        font-weight: bold;
      }

      &-suffix {
        margin-left: 1em;
      }

      &-highlight {
        display: inline-block;
        white-space: nowrap;
        vertical-align: middle;
        background-color: color(hubgrepDark);
        color: color(whiteAlt);
        margin: 0.2em 0 0.2em 0.7em;
        padding: 0.1em 0.35em;
        border-radius: 3px;
      }
    }
  }

  // override collapse component since part of the form is used as collapse-label, and part is in content
  .collapsible.sform {
    .lbl-toggle {
      display: flex;
      align-items: center;
      pointer-events: none;

      input, .btn-collapse {
        pointer-events: all;
      }

      .label {
        flex: 1 0 100%; // pushes options btn to overflow on right
      }

    }

    .collapsible-content {
      margin-top: 1.5em;  // give enough room for "search tips" to be visible
    }
  }

  .collapsible.shints {
    margin-top: 0.15em;
    margin-right: 1em;

    .lbl-toggle {
      display: flex;
      justify-content: flex-end;
      user-select: none;
    }
  }

  @include maxBreakpoint("mobile") {
    .collapsible.sform {
      .lbl-toggle {
        .label {
          flex: 1 0 auto; // no options btn overflow
        }
      }

      &.absolute .collapsible-content {
        position: static;
      }
    }

    .collapsible.shints {
      margin-right: 3em;

      &.absolute .collapsible-content {
        position: static;
      }
    }
  }

  @include minBreakpoint("mobile") {
  }
}