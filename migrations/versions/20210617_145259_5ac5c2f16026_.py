"""empty message

Revision ID: 5ac5c2f16026
Revises: c618907185dd
Create Date: 2021-06-17 14:52:59.818590

"""
import logging
import json
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm.session import Session
from sqlalchemy import Column, Integer, String, Text
from sqlalchemy.ext.declarative import declarative_base

# revision identifiers, used by Alembic.
revision = '5ac5c2f16026'
down_revision = 'c618907185dd'
branch_labels = None
depends_on = None

from hubgrep import db
Base = declarative_base()

class HostingService(Base):
    """
    a copy of the hosting_service class, with the required fields to run this migration
    """
    __tablename__ = "hosting_service"
    id = Column(Integer, primary_key=True)

    api_url = Column(String(500), unique=True, nullable=False)

    custom_config = Column(Text)
    config = Column(Text)
   
    # we need an api key for github and gitlab
    api_key = Column(String(500), nullable=True)

    def migrate_api_key(self):
        try:
            config_json = json.loads(self.config)
        except Exception:
            config_json = {}
        self.api_key = config_json.get('api_token', '')
        print(f"setting api key {self.api_key} for {self.api_url}")

    def migrate_api_url(self):
        """
        we decided to handle the actual api path in code, so we just need the base url here. (same as landing page in almost all cases)
        """
        api_url = self.api_url
        if "api/" in api_url:
            self.api_url = api_url.split("api/")[0]
        print(f"changed {api_url} to {self.api_url}")


def migrate_objects(session):
    print("migrate_objects")
    for h in session.query(HostingService).all():
        h.migrate_api_key()
        h.migrate_api_url()
        session.add(h)
    session.commit()

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('hosting_service', sa.Column('api_key', sa.String(length=500), nullable=True))
    op.add_column('hosting_service', sa.Column('custom_config', sa.Text(), nullable=True))
    op.alter_column('hosting_service', 'label',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=80),
               existing_nullable=True)
    session = Session(bind=op.get_bind())
    migrate_objects(session)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('hosting_service', 'label',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.drop_column('hosting_service', 'custom_config')
    op.drop_column('hosting_service', 'api_key')
    # ### end Alembic commands ###
